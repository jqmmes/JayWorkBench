# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import lib.protobuf.JayProto_pb2 as JayProto__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from google.protobuf import wrappers_pb2 as google_dot_protobuf_dot_wrappers__pb2


class BrokerServiceStub(object):
    """Internal and External communication Broker
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ping = channel.unary_unary(
                '/BrokerService/ping',
                request_serializer=JayProto__pb2.Ping.SerializeToString,
                response_deserializer=JayProto__pb2.Ping.FromString,
                )
        self.executeTask = channel.unary_stream(
                '/BrokerService/executeTask',
                request_serializer=JayProto__pb2.Task.SerializeToString,
                response_deserializer=JayProto__pb2.Response.FromString,
                )
        self.scheduleTask = channel.unary_unary(
                '/BrokerService/scheduleTask',
                request_serializer=JayProto__pb2.Task.SerializeToString,
                response_deserializer=JayProto__pb2.Response.FromString,
                )
        self.advertiseWorkerStatus = channel.unary_unary(
                '/BrokerService/advertiseWorkerStatus',
                request_serializer=JayProto__pb2.Worker.SerializeToString,
                response_deserializer=JayProto__pb2.Status.FromString,
                )
        self.diffuseWorkerStatus = channel.unary_unary(
                '/BrokerService/diffuseWorkerStatus',
                request_serializer=JayProto__pb2.Worker.SerializeToString,
                response_deserializer=JayProto__pb2.Status.FromString,
                )
        self.requestWorkerStatus = channel.unary_unary(
                '/BrokerService/requestWorkerStatus',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=JayProto__pb2.Worker.FromString,
                )
        self.updateWorkers = channel.unary_unary(
                '/BrokerService/updateWorkers',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.getSchedulers = channel.unary_unary(
                '/BrokerService/getSchedulers',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=JayProto__pb2.Schedulers.FromString,
                )
        self.setScheduler = channel.unary_unary(
                '/BrokerService/setScheduler',
                request_serializer=JayProto__pb2.Scheduler.SerializeToString,
                response_deserializer=JayProto__pb2.Status.FromString,
                )
        self.listenMulticast = channel.unary_unary(
                '/BrokerService/listenMulticast',
                request_serializer=google_dot_protobuf_dot_wrappers__pb2.BoolValue.SerializeToString,
                response_deserializer=JayProto__pb2.Status.FromString,
                )
        self.announceMulticast = channel.unary_unary(
                '/BrokerService/announceMulticast',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=JayProto__pb2.Status.FromString,
                )
        self.enableHearBeats = channel.unary_unary(
                '/BrokerService/enableHearBeats',
                request_serializer=JayProto__pb2.WorkerTypes.SerializeToString,
                response_deserializer=JayProto__pb2.Status.FromString,
                )
        self.enableBandwidthEstimates = channel.unary_unary(
                '/BrokerService/enableBandwidthEstimates',
                request_serializer=JayProto__pb2.BandwidthEstimate.SerializeToString,
                response_deserializer=JayProto__pb2.Status.FromString,
                )
        self.disableHearBeats = channel.unary_unary(
                '/BrokerService/disableHearBeats',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=JayProto__pb2.Status.FromString,
                )
        self.disableBandwidthEstimates = channel.unary_unary(
                '/BrokerService/disableBandwidthEstimates',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=JayProto__pb2.Status.FromString,
                )
        self.enableWorkerStatusAdvertisement = channel.unary_unary(
                '/BrokerService/enableWorkerStatusAdvertisement',
                request_serializer=JayProto__pb2.WorkerTypes.SerializeToString,
                response_deserializer=JayProto__pb2.Status.FromString,
                )
        self.disableWorkerStatusAdvertisement = channel.unary_unary(
                '/BrokerService/disableWorkerStatusAdvertisement',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=JayProto__pb2.Status.FromString,
                )
        self.updateSmartSchedulerWeights = channel.unary_unary(
                '/BrokerService/updateSmartSchedulerWeights',
                request_serializer=JayProto__pb2.Weights.SerializeToString,
                response_deserializer=JayProto__pb2.Status.FromString,
                )
        self.announceServiceStatus = channel.unary_unary(
                '/BrokerService/announceServiceStatus',
                request_serializer=JayProto__pb2.ServiceStatus.SerializeToString,
                response_deserializer=JayProto__pb2.Status.FromString,
                )
        self.stopService = channel.unary_unary(
                '/BrokerService/stopService',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=JayProto__pb2.Status.FromString,
                )
        self.calibrateWorker = channel.unary_unary(
                '/BrokerService/calibrateWorker',
                request_serializer=JayProto__pb2.String.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.createTask = channel.unary_unary(
                '/BrokerService/createTask',
                request_serializer=JayProto__pb2.String.SerializeToString,
                response_deserializer=JayProto__pb2.Response.FromString,
                )
        self.setSettings = channel.unary_unary(
                '/BrokerService/setSettings',
                request_serializer=JayProto__pb2.Settings.SerializeToString,
                response_deserializer=JayProto__pb2.Status.FromString,
                )
        self.listTaskExecutors = channel.unary_unary(
                '/BrokerService/listTaskExecutors',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=JayProto__pb2.TaskExecutors.FromString,
                )
        self.selectTaskExecutor = channel.unary_unary(
                '/BrokerService/selectTaskExecutor',
                request_serializer=JayProto__pb2.TaskExecutor.SerializeToString,
                response_deserializer=JayProto__pb2.Status.FromString,
                )
        self.callExecutorAction = channel.unary_unary(
                '/BrokerService/callExecutorAction',
                request_serializer=JayProto__pb2.Request.SerializeToString,
                response_deserializer=JayProto__pb2.Response.FromString,
                )
        self.runExecutorAction = channel.unary_unary(
                '/BrokerService/runExecutorAction',
                request_serializer=JayProto__pb2.Request.SerializeToString,
                response_deserializer=JayProto__pb2.Status.FromString,
                )
        self.setExecutorSettings = channel.unary_unary(
                '/BrokerService/setExecutorSettings',
                request_serializer=JayProto__pb2.Settings.SerializeToString,
                response_deserializer=JayProto__pb2.Status.FromString,
                )


class BrokerServiceServicer(object):
    """Internal and External communication Broker
    """

    def ping(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def executeTask(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def scheduleTask(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def advertiseWorkerStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def diffuseWorkerStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def requestWorkerStatus(self, request, context):
        """ExternalBroker::diffuseWorkerStatus
        SchedulerService::notifyWorkerUpdate
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def updateWorkers(self, request, context):
        """SchedulerService::notifyWorkerUpdate

        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getSchedulers(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def setScheduler(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def listenMulticast(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def announceMulticast(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def enableHearBeats(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def enableBandwidthEstimates(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def disableHearBeats(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def disableBandwidthEstimates(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def enableWorkerStatusAdvertisement(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def disableWorkerStatusAdvertisement(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def updateSmartSchedulerWeights(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def announceServiceStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def stopService(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def calibrateWorker(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def createTask(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def setSettings(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def listTaskExecutors(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def selectTaskExecutor(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def callExecutorAction(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def runExecutorAction(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def setExecutorSettings(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_BrokerServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ping': grpc.unary_unary_rpc_method_handler(
                    servicer.ping,
                    request_deserializer=JayProto__pb2.Ping.FromString,
                    response_serializer=JayProto__pb2.Ping.SerializeToString,
            ),
            'executeTask': grpc.unary_stream_rpc_method_handler(
                    servicer.executeTask,
                    request_deserializer=JayProto__pb2.Task.FromString,
                    response_serializer=JayProto__pb2.Response.SerializeToString,
            ),
            'scheduleTask': grpc.unary_unary_rpc_method_handler(
                    servicer.scheduleTask,
                    request_deserializer=JayProto__pb2.Task.FromString,
                    response_serializer=JayProto__pb2.Response.SerializeToString,
            ),
            'advertiseWorkerStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.advertiseWorkerStatus,
                    request_deserializer=JayProto__pb2.Worker.FromString,
                    response_serializer=JayProto__pb2.Status.SerializeToString,
            ),
            'diffuseWorkerStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.diffuseWorkerStatus,
                    request_deserializer=JayProto__pb2.Worker.FromString,
                    response_serializer=JayProto__pb2.Status.SerializeToString,
            ),
            'requestWorkerStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.requestWorkerStatus,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=JayProto__pb2.Worker.SerializeToString,
            ),
            'updateWorkers': grpc.unary_unary_rpc_method_handler(
                    servicer.updateWorkers,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'getSchedulers': grpc.unary_unary_rpc_method_handler(
                    servicer.getSchedulers,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=JayProto__pb2.Schedulers.SerializeToString,
            ),
            'setScheduler': grpc.unary_unary_rpc_method_handler(
                    servicer.setScheduler,
                    request_deserializer=JayProto__pb2.Scheduler.FromString,
                    response_serializer=JayProto__pb2.Status.SerializeToString,
            ),
            'listenMulticast': grpc.unary_unary_rpc_method_handler(
                    servicer.listenMulticast,
                    request_deserializer=google_dot_protobuf_dot_wrappers__pb2.BoolValue.FromString,
                    response_serializer=JayProto__pb2.Status.SerializeToString,
            ),
            'announceMulticast': grpc.unary_unary_rpc_method_handler(
                    servicer.announceMulticast,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=JayProto__pb2.Status.SerializeToString,
            ),
            'enableHearBeats': grpc.unary_unary_rpc_method_handler(
                    servicer.enableHearBeats,
                    request_deserializer=JayProto__pb2.WorkerTypes.FromString,
                    response_serializer=JayProto__pb2.Status.SerializeToString,
            ),
            'enableBandwidthEstimates': grpc.unary_unary_rpc_method_handler(
                    servicer.enableBandwidthEstimates,
                    request_deserializer=JayProto__pb2.BandwidthEstimate.FromString,
                    response_serializer=JayProto__pb2.Status.SerializeToString,
            ),
            'disableHearBeats': grpc.unary_unary_rpc_method_handler(
                    servicer.disableHearBeats,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=JayProto__pb2.Status.SerializeToString,
            ),
            'disableBandwidthEstimates': grpc.unary_unary_rpc_method_handler(
                    servicer.disableBandwidthEstimates,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=JayProto__pb2.Status.SerializeToString,
            ),
            'enableWorkerStatusAdvertisement': grpc.unary_unary_rpc_method_handler(
                    servicer.enableWorkerStatusAdvertisement,
                    request_deserializer=JayProto__pb2.WorkerTypes.FromString,
                    response_serializer=JayProto__pb2.Status.SerializeToString,
            ),
            'disableWorkerStatusAdvertisement': grpc.unary_unary_rpc_method_handler(
                    servicer.disableWorkerStatusAdvertisement,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=JayProto__pb2.Status.SerializeToString,
            ),
            'updateSmartSchedulerWeights': grpc.unary_unary_rpc_method_handler(
                    servicer.updateSmartSchedulerWeights,
                    request_deserializer=JayProto__pb2.Weights.FromString,
                    response_serializer=JayProto__pb2.Status.SerializeToString,
            ),
            'announceServiceStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.announceServiceStatus,
                    request_deserializer=JayProto__pb2.ServiceStatus.FromString,
                    response_serializer=JayProto__pb2.Status.SerializeToString,
            ),
            'stopService': grpc.unary_unary_rpc_method_handler(
                    servicer.stopService,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=JayProto__pb2.Status.SerializeToString,
            ),
            'calibrateWorker': grpc.unary_unary_rpc_method_handler(
                    servicer.calibrateWorker,
                    request_deserializer=JayProto__pb2.String.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'createTask': grpc.unary_unary_rpc_method_handler(
                    servicer.createTask,
                    request_deserializer=JayProto__pb2.String.FromString,
                    response_serializer=JayProto__pb2.Response.SerializeToString,
            ),
            'setSettings': grpc.unary_unary_rpc_method_handler(
                    servicer.setSettings,
                    request_deserializer=JayProto__pb2.Settings.FromString,
                    response_serializer=JayProto__pb2.Status.SerializeToString,
            ),
            'listTaskExecutors': grpc.unary_unary_rpc_method_handler(
                    servicer.listTaskExecutors,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=JayProto__pb2.TaskExecutors.SerializeToString,
            ),
            'selectTaskExecutor': grpc.unary_unary_rpc_method_handler(
                    servicer.selectTaskExecutor,
                    request_deserializer=JayProto__pb2.TaskExecutor.FromString,
                    response_serializer=JayProto__pb2.Status.SerializeToString,
            ),
            'callExecutorAction': grpc.unary_unary_rpc_method_handler(
                    servicer.callExecutorAction,
                    request_deserializer=JayProto__pb2.Request.FromString,
                    response_serializer=JayProto__pb2.Response.SerializeToString,
            ),
            'runExecutorAction': grpc.unary_unary_rpc_method_handler(
                    servicer.runExecutorAction,
                    request_deserializer=JayProto__pb2.Request.FromString,
                    response_serializer=JayProto__pb2.Status.SerializeToString,
            ),
            'setExecutorSettings': grpc.unary_unary_rpc_method_handler(
                    servicer.setExecutorSettings,
                    request_deserializer=JayProto__pb2.Settings.FromString,
                    response_serializer=JayProto__pb2.Status.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'BrokerService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class BrokerService(object):
    """Internal and External communication Broker
    """

    @staticmethod
    def ping(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/BrokerService/ping',
            JayProto__pb2.Ping.SerializeToString,
            JayProto__pb2.Ping.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def executeTask(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/BrokerService/executeTask',
            JayProto__pb2.Task.SerializeToString,
            JayProto__pb2.Response.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def scheduleTask(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/BrokerService/scheduleTask',
            JayProto__pb2.Task.SerializeToString,
            JayProto__pb2.Response.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def advertiseWorkerStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/BrokerService/advertiseWorkerStatus',
            JayProto__pb2.Worker.SerializeToString,
            JayProto__pb2.Status.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def diffuseWorkerStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/BrokerService/diffuseWorkerStatus',
            JayProto__pb2.Worker.SerializeToString,
            JayProto__pb2.Status.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def requestWorkerStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/BrokerService/requestWorkerStatus',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            JayProto__pb2.Worker.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def updateWorkers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/BrokerService/updateWorkers',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getSchedulers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/BrokerService/getSchedulers',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            JayProto__pb2.Schedulers.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def setScheduler(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/BrokerService/setScheduler',
            JayProto__pb2.Scheduler.SerializeToString,
            JayProto__pb2.Status.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def listenMulticast(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/BrokerService/listenMulticast',
            google_dot_protobuf_dot_wrappers__pb2.BoolValue.SerializeToString,
            JayProto__pb2.Status.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def announceMulticast(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/BrokerService/announceMulticast',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            JayProto__pb2.Status.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def enableHearBeats(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/BrokerService/enableHearBeats',
            JayProto__pb2.WorkerTypes.SerializeToString,
            JayProto__pb2.Status.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def enableBandwidthEstimates(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/BrokerService/enableBandwidthEstimates',
            JayProto__pb2.BandwidthEstimate.SerializeToString,
            JayProto__pb2.Status.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def disableHearBeats(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/BrokerService/disableHearBeats',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            JayProto__pb2.Status.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def disableBandwidthEstimates(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/BrokerService/disableBandwidthEstimates',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            JayProto__pb2.Status.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def enableWorkerStatusAdvertisement(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/BrokerService/enableWorkerStatusAdvertisement',
            JayProto__pb2.WorkerTypes.SerializeToString,
            JayProto__pb2.Status.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def disableWorkerStatusAdvertisement(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/BrokerService/disableWorkerStatusAdvertisement',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            JayProto__pb2.Status.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def updateSmartSchedulerWeights(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/BrokerService/updateSmartSchedulerWeights',
            JayProto__pb2.Weights.SerializeToString,
            JayProto__pb2.Status.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def announceServiceStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/BrokerService/announceServiceStatus',
            JayProto__pb2.ServiceStatus.SerializeToString,
            JayProto__pb2.Status.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def stopService(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/BrokerService/stopService',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            JayProto__pb2.Status.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def calibrateWorker(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/BrokerService/calibrateWorker',
            JayProto__pb2.String.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def createTask(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/BrokerService/createTask',
            JayProto__pb2.String.SerializeToString,
            JayProto__pb2.Response.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def setSettings(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/BrokerService/setSettings',
            JayProto__pb2.Settings.SerializeToString,
            JayProto__pb2.Status.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def listTaskExecutors(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/BrokerService/listTaskExecutors',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            JayProto__pb2.TaskExecutors.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def selectTaskExecutor(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/BrokerService/selectTaskExecutor',
            JayProto__pb2.TaskExecutor.SerializeToString,
            JayProto__pb2.Status.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def callExecutorAction(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/BrokerService/callExecutorAction',
            JayProto__pb2.Request.SerializeToString,
            JayProto__pb2.Response.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def runExecutorAction(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/BrokerService/runExecutorAction',
            JayProto__pb2.Request.SerializeToString,
            JayProto__pb2.Status.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def setExecutorSettings(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/BrokerService/setExecutorSettings',
            JayProto__pb2.Settings.SerializeToString,
            JayProto__pb2.Status.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)


class ProfilerServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.setState = channel.unary_unary(
                '/ProfilerService/setState',
                request_serializer=JayProto__pb2.JayState.SerializeToString,
                response_deserializer=JayProto__pb2.Status.FromString,
                )
        self.unSetState = channel.unary_unary(
                '/ProfilerService/unSetState',
                request_serializer=JayProto__pb2.JayState.SerializeToString,
                response_deserializer=JayProto__pb2.Status.FromString,
                )
        self.startRecording = channel.unary_unary(
                '/ProfilerService/startRecording',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=JayProto__pb2.Status.FromString,
                )
        self.stopRecording = channel.unary_unary(
                '/ProfilerService/stopRecording',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=JayProto__pb2.ProfileRecordings.FromString,
                )
        self.getDeviceStatus = channel.unary_unary(
                '/ProfilerService/getDeviceStatus',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=JayProto__pb2.ProfileRecording.FromString,
                )
        self.testService = channel.unary_unary(
                '/ProfilerService/testService',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=JayProto__pb2.ServiceStatus.FromString,
                )
        self.stopService = channel.unary_unary(
                '/ProfilerService/stopService',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=JayProto__pb2.Status.FromString,
                )


class ProfilerServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def setState(self, request, context):
        """setState(STATE)  stack states
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def unSetState(self, request, context):
        """unsetState(STATE) unstack states
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def startRecording(self, request, context):
        """startRecording()
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def stopRecording(self, request, context):
        """stopRecording()
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getDeviceStatus(self, request, context):
        """getDeviceStatus()
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def testService(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def stopService(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ProfilerServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'setState': grpc.unary_unary_rpc_method_handler(
                    servicer.setState,
                    request_deserializer=JayProto__pb2.JayState.FromString,
                    response_serializer=JayProto__pb2.Status.SerializeToString,
            ),
            'unSetState': grpc.unary_unary_rpc_method_handler(
                    servicer.unSetState,
                    request_deserializer=JayProto__pb2.JayState.FromString,
                    response_serializer=JayProto__pb2.Status.SerializeToString,
            ),
            'startRecording': grpc.unary_unary_rpc_method_handler(
                    servicer.startRecording,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=JayProto__pb2.Status.SerializeToString,
            ),
            'stopRecording': grpc.unary_unary_rpc_method_handler(
                    servicer.stopRecording,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=JayProto__pb2.ProfileRecordings.SerializeToString,
            ),
            'getDeviceStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.getDeviceStatus,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=JayProto__pb2.ProfileRecording.SerializeToString,
            ),
            'testService': grpc.unary_unary_rpc_method_handler(
                    servicer.testService,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=JayProto__pb2.ServiceStatus.SerializeToString,
            ),
            'stopService': grpc.unary_unary_rpc_method_handler(
                    servicer.stopService,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=JayProto__pb2.Status.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ProfilerService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ProfilerService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def setState(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ProfilerService/setState',
            JayProto__pb2.JayState.SerializeToString,
            JayProto__pb2.Status.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def unSetState(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ProfilerService/unSetState',
            JayProto__pb2.JayState.SerializeToString,
            JayProto__pb2.Status.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def startRecording(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ProfilerService/startRecording',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            JayProto__pb2.Status.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def stopRecording(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ProfilerService/stopRecording',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            JayProto__pb2.ProfileRecordings.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getDeviceStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ProfilerService/getDeviceStatus',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            JayProto__pb2.ProfileRecording.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def testService(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ProfilerService/testService',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            JayProto__pb2.ServiceStatus.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def stopService(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ProfilerService/stopService',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            JayProto__pb2.Status.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)


class SchedulerServiceStub(object):
    """Broker > SchedulerBase
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.schedule = channel.unary_unary(
                '/SchedulerService/schedule',
                request_serializer=JayProto__pb2.TaskDetails.SerializeToString,
                response_deserializer=JayProto__pb2.Worker.FromString,
                )
        self.notifyTaskComplete = channel.unary_unary(
                '/SchedulerService/notifyTaskComplete',
                request_serializer=JayProto__pb2.TaskDetails.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.notifyWorkerUpdate = channel.unary_unary(
                '/SchedulerService/notifyWorkerUpdate',
                request_serializer=JayProto__pb2.Worker.SerializeToString,
                response_deserializer=JayProto__pb2.Status.FromString,
                )
        self.notifyWorkerFailure = channel.unary_unary(
                '/SchedulerService/notifyWorkerFailure',
                request_serializer=JayProto__pb2.Worker.SerializeToString,
                response_deserializer=JayProto__pb2.Status.FromString,
                )
        self.setScheduler = channel.unary_unary(
                '/SchedulerService/setScheduler',
                request_serializer=JayProto__pb2.Scheduler.SerializeToString,
                response_deserializer=JayProto__pb2.Status.FromString,
                )
        self.listSchedulers = channel.unary_unary(
                '/SchedulerService/listSchedulers',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=JayProto__pb2.Schedulers.FromString,
                )
        self.updateSmartSchedulerWeights = channel.unary_unary(
                '/SchedulerService/updateSmartSchedulerWeights',
                request_serializer=JayProto__pb2.Weights.SerializeToString,
                response_deserializer=JayProto__pb2.Status.FromString,
                )
        self.testService = channel.unary_unary(
                '/SchedulerService/testService',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=JayProto__pb2.ServiceStatus.FromString,
                )
        self.stopService = channel.unary_unary(
                '/SchedulerService/stopService',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=JayProto__pb2.Status.FromString,
                )


class SchedulerServiceServicer(object):
    """Broker > SchedulerBase
    """

    def schedule(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def notifyTaskComplete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def notifyWorkerUpdate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def notifyWorkerFailure(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def setScheduler(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def listSchedulers(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def updateSmartSchedulerWeights(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def testService(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def stopService(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SchedulerServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'schedule': grpc.unary_unary_rpc_method_handler(
                    servicer.schedule,
                    request_deserializer=JayProto__pb2.TaskDetails.FromString,
                    response_serializer=JayProto__pb2.Worker.SerializeToString,
            ),
            'notifyTaskComplete': grpc.unary_unary_rpc_method_handler(
                    servicer.notifyTaskComplete,
                    request_deserializer=JayProto__pb2.TaskDetails.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'notifyWorkerUpdate': grpc.unary_unary_rpc_method_handler(
                    servicer.notifyWorkerUpdate,
                    request_deserializer=JayProto__pb2.Worker.FromString,
                    response_serializer=JayProto__pb2.Status.SerializeToString,
            ),
            'notifyWorkerFailure': grpc.unary_unary_rpc_method_handler(
                    servicer.notifyWorkerFailure,
                    request_deserializer=JayProto__pb2.Worker.FromString,
                    response_serializer=JayProto__pb2.Status.SerializeToString,
            ),
            'setScheduler': grpc.unary_unary_rpc_method_handler(
                    servicer.setScheduler,
                    request_deserializer=JayProto__pb2.Scheduler.FromString,
                    response_serializer=JayProto__pb2.Status.SerializeToString,
            ),
            'listSchedulers': grpc.unary_unary_rpc_method_handler(
                    servicer.listSchedulers,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=JayProto__pb2.Schedulers.SerializeToString,
            ),
            'updateSmartSchedulerWeights': grpc.unary_unary_rpc_method_handler(
                    servicer.updateSmartSchedulerWeights,
                    request_deserializer=JayProto__pb2.Weights.FromString,
                    response_serializer=JayProto__pb2.Status.SerializeToString,
            ),
            'testService': grpc.unary_unary_rpc_method_handler(
                    servicer.testService,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=JayProto__pb2.ServiceStatus.SerializeToString,
            ),
            'stopService': grpc.unary_unary_rpc_method_handler(
                    servicer.stopService,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=JayProto__pb2.Status.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'SchedulerService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class SchedulerService(object):
    """Broker > SchedulerBase
    """

    @staticmethod
    def schedule(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SchedulerService/schedule',
            JayProto__pb2.TaskDetails.SerializeToString,
            JayProto__pb2.Worker.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def notifyTaskComplete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SchedulerService/notifyTaskComplete',
            JayProto__pb2.TaskDetails.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def notifyWorkerUpdate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SchedulerService/notifyWorkerUpdate',
            JayProto__pb2.Worker.SerializeToString,
            JayProto__pb2.Status.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def notifyWorkerFailure(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SchedulerService/notifyWorkerFailure',
            JayProto__pb2.Worker.SerializeToString,
            JayProto__pb2.Status.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def setScheduler(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SchedulerService/setScheduler',
            JayProto__pb2.Scheduler.SerializeToString,
            JayProto__pb2.Status.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def listSchedulers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SchedulerService/listSchedulers',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            JayProto__pb2.Schedulers.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def updateSmartSchedulerWeights(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SchedulerService/updateSmartSchedulerWeights',
            JayProto__pb2.Weights.SerializeToString,
            JayProto__pb2.Status.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def testService(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SchedulerService/testService',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            JayProto__pb2.ServiceStatus.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def stopService(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SchedulerService/stopService',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            JayProto__pb2.Status.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)


class WorkerServiceStub(object):
    """Broker > WorkerService
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.execute = channel.unary_unary(
                '/WorkerService/execute',
                request_serializer=JayProto__pb2.WorkerTask.SerializeToString,
                response_deserializer=JayProto__pb2.Response.FromString,
                )
        self.testService = channel.unary_unary(
                '/WorkerService/testService',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=JayProto__pb2.ServiceStatus.FromString,
                )
        self.stopService = channel.unary_unary(
                '/WorkerService/stopService',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=JayProto__pb2.Status.FromString,
                )
        self.listTaskExecutors = channel.unary_unary(
                '/WorkerService/listTaskExecutors',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=JayProto__pb2.TaskExecutors.FromString,
                )
        self.selectTaskExecutor = channel.unary_unary(
                '/WorkerService/selectTaskExecutor',
                request_serializer=JayProto__pb2.TaskExecutor.SerializeToString,
                response_deserializer=JayProto__pb2.Status.FromString,
                )
        self.callExecutorAction = channel.unary_unary(
                '/WorkerService/callExecutorAction',
                request_serializer=JayProto__pb2.Request.SerializeToString,
                response_deserializer=JayProto__pb2.Response.FromString,
                )
        self.runExecutorAction = channel.unary_unary(
                '/WorkerService/runExecutorAction',
                request_serializer=JayProto__pb2.Request.SerializeToString,
                response_deserializer=JayProto__pb2.Status.FromString,
                )
        self.setExecutorSettings = channel.unary_unary(
                '/WorkerService/setExecutorSettings',
                request_serializer=JayProto__pb2.Settings.SerializeToString,
                response_deserializer=JayProto__pb2.Status.FromString,
                )
        self.getWorkerStatus = channel.unary_unary(
                '/WorkerService/getWorkerStatus',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=JayProto__pb2.WorkerComputeStatus.FromString,
                )


class WorkerServiceServicer(object):
    """Broker > WorkerService
    """

    def execute(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def testService(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def stopService(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def listTaskExecutors(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def selectTaskExecutor(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def callExecutorAction(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def runExecutorAction(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def setExecutorSettings(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getWorkerStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_WorkerServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'execute': grpc.unary_unary_rpc_method_handler(
                    servicer.execute,
                    request_deserializer=JayProto__pb2.WorkerTask.FromString,
                    response_serializer=JayProto__pb2.Response.SerializeToString,
            ),
            'testService': grpc.unary_unary_rpc_method_handler(
                    servicer.testService,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=JayProto__pb2.ServiceStatus.SerializeToString,
            ),
            'stopService': grpc.unary_unary_rpc_method_handler(
                    servicer.stopService,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=JayProto__pb2.Status.SerializeToString,
            ),
            'listTaskExecutors': grpc.unary_unary_rpc_method_handler(
                    servicer.listTaskExecutors,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=JayProto__pb2.TaskExecutors.SerializeToString,
            ),
            'selectTaskExecutor': grpc.unary_unary_rpc_method_handler(
                    servicer.selectTaskExecutor,
                    request_deserializer=JayProto__pb2.TaskExecutor.FromString,
                    response_serializer=JayProto__pb2.Status.SerializeToString,
            ),
            'callExecutorAction': grpc.unary_unary_rpc_method_handler(
                    servicer.callExecutorAction,
                    request_deserializer=JayProto__pb2.Request.FromString,
                    response_serializer=JayProto__pb2.Response.SerializeToString,
            ),
            'runExecutorAction': grpc.unary_unary_rpc_method_handler(
                    servicer.runExecutorAction,
                    request_deserializer=JayProto__pb2.Request.FromString,
                    response_serializer=JayProto__pb2.Status.SerializeToString,
            ),
            'setExecutorSettings': grpc.unary_unary_rpc_method_handler(
                    servicer.setExecutorSettings,
                    request_deserializer=JayProto__pb2.Settings.FromString,
                    response_serializer=JayProto__pb2.Status.SerializeToString,
            ),
            'getWorkerStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.getWorkerStatus,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=JayProto__pb2.WorkerComputeStatus.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'WorkerService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class WorkerService(object):
    """Broker > WorkerService
    """

    @staticmethod
    def execute(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/WorkerService/execute',
            JayProto__pb2.WorkerTask.SerializeToString,
            JayProto__pb2.Response.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def testService(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/WorkerService/testService',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            JayProto__pb2.ServiceStatus.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def stopService(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/WorkerService/stopService',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            JayProto__pb2.Status.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def listTaskExecutors(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/WorkerService/listTaskExecutors',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            JayProto__pb2.TaskExecutors.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def selectTaskExecutor(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/WorkerService/selectTaskExecutor',
            JayProto__pb2.TaskExecutor.SerializeToString,
            JayProto__pb2.Status.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def callExecutorAction(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/WorkerService/callExecutorAction',
            JayProto__pb2.Request.SerializeToString,
            JayProto__pb2.Response.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def runExecutorAction(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/WorkerService/runExecutorAction',
            JayProto__pb2.Request.SerializeToString,
            JayProto__pb2.Status.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def setExecutorSettings(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/WorkerService/setExecutorSettings',
            JayProto__pb2.Settings.SerializeToString,
            JayProto__pb2.Status.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getWorkerStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/WorkerService/getWorkerStatus',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            JayProto__pb2.WorkerComputeStatus.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)
